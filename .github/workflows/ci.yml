name: CI
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Daily “At 00:00”

jobs:
  test:
    # if: |
    #   github.repository == 'NCAR/ncl'
    name: Python (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "macos-latest"]
        python-version: [ "3.6", "3.7", "3.8", "3.9" ]

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ github.token }}
      - name: Conda setup
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ncl_build
          python-version: ${{ matrix.python-version }}
          channels: conda-forge, ncar
      - name: Conda install (Darwin)
        if: matrix.os == 'macos-latest'
        run: |
          conda env update --file .build/envs/Darwin.yml --prune
      - name: Conda install (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          conda env update --file .build/envs/Linux.yml --prune
      - name: Install additional dependencies
        run: |
          conda install -n ncl_build -c conda-forge imagemagick esmf libgdal=2.4
      - name: Build ncl
        run: |
          unsetopt EQUALS 2>/dev/null

          RECIPE_DIR="$(dirname "$0")"
          export SRC_DIR="$(cd `dirname ${RECIPE_DIR}`; pwd)"
          export RECIPE_DIR="${SRC_DIR}/$(basename "${RECIPE_DIR}")"

          cd ${SRC_DIR}

          conda env create -f "${RECIPE_DIR}/envs/`uname`.yml" 2>/dev/null
          source activate ncl_build 2>/dev/null || conda activate ncl_build


          export PREFIX="${CONDA_PREFIX}"
          export CXXFLAGS="-fPIC $CXXFLAGS"
          export LDFLAGS="-L${PREFIX}/lib $LDFLAGS"
          export CPPFLAGS="-I${PREFIX}/include $CPPFLAGS"
          export CFLAGS="-I${PREFIX}/include $CFLAGS"

          export CC="$GCC"
          export CPP="${CPP} -traditional"
          export CXX="$GXX"
          export FC

          conf_file=config/LINUX

          fi

          export EXTRA_LDFLAGS="$LDFLAGS"

          export grib2_dir=${SRC_DIR}/external/g2clib-1.6.0
          export EXTRA_INCLUDES=-I${grib2_dir}

          # fix malformed sed subsitutions
          sed -e 's/+/|/g' -i.backup ni/src/scripts/yMakefile
          sed -e 's/+/|/g' -i.backup ni/src/ncl/yMakefile

      - name: Run tests
        run: |
          test "`ncl -V`" = "`cat version`"
          git clone https://github.com/NCAR/ncl_ci_test
          cd ncl_ci_test
          source run_tests.bash
